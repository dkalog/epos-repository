# Makefile.in generated by automake 1.16.1 from Makefile.am.
# src/amd/Makefile.  Generated from Makefile.in by configure.

# Copyright (C) 1994-2018 Free Software Foundation, Inc.

# This Makefile.in is free software; the Free Software Foundation
# gives unlimited permission to copy and/or distribute it,
# with or without modifications, as long as this notice is preserved.

# This program is distributed in the hope that it will be useful,
# but WITHOUT ANY WARRANTY, to the extent permitted by law; without
# even the implied warranty of MERCHANTABILITY or FITNESS FOR A
# PARTICULAR PURPOSE.



# Copyright © 2016 Red Hat.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

# Copyright 2016 Red Hat Inc.
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT.  IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.

# Copyright © 2016 Bas Nieuwenhuizen
#
# Permission is hereby granted, free of charge, to any person obtaining a
# copy of this software and associated documentation files (the "Software"),
# to deal in the Software without restriction, including without limitation
# the rights to use, copy, modify, merge, publish, distribute, sublicense,
# and/or sell copies of the Software, and to permit persons to whom the
# Software is furnished to do so, subject to the following conditions:
#
# The above copyright notice and this permission notice (including the next
# paragraph) shall be included in all copies or substantial portions of the
# Software.
#
# THE SOFTWARE IS PROVIDED "AS IS", WITHOUT WARRANTY OF ANY KIND, EXPRESS OR
# IMPLIED, INCLUDING BUT NOT LIMITED TO THE WARRANTIES OF MERCHANTABILITY,
# FITNESS FOR A PARTICULAR PURPOSE AND NONINFRINGEMENT. IN NO EVENT SHALL
# THE AUTHORS OR COPYRIGHT HOLDERS BE LIABLE FOR ANY CLAIM, DAMAGES OR OTHER
# LIABILITY, WHETHER IN AN ACTION OF CONTRACT, TORT OR OTHERWISE, ARISING
# FROM, OUT OF OR IN CONNECTION WITH THE SOFTWARE OR THE USE OR OTHER DEALINGS
# IN THE SOFTWARE.


am__is_gnu_make = { \
  if test -z '$(MAKELEVEL)'; then \
    false; \
  elif test -n '$(MAKE_HOST)'; then \
    true; \
  elif test -n '$(MAKE_VERSION)' && test -n '$(CURDIR)'; then \
    true; \
  else \
    false; \
  fi; \
}
am__make_running_with_option = \
  case $${target_option-} in \
      ?) ;; \
      *) echo "am__make_running_with_option: internal error: invalid" \
              "target option '$${target_option-}' specified" >&2; \
         exit 1;; \
  esac; \
  has_opt=no; \
  sane_makeflags=$$MAKEFLAGS; \
  if $(am__is_gnu_make); then \
    sane_makeflags=$$MFLAGS; \
  else \
    case $$MAKEFLAGS in \
      *\\[\ \	]*) \
        bs=\\; \
        sane_makeflags=`printf '%s\n' "$$MAKEFLAGS" \
          | sed "s/$$bs$$bs[$$bs $$bs	]*//g"`;; \
    esac; \
  fi; \
  skip_next=no; \
  strip_trailopt () \
  { \
    flg=`printf '%s\n' "$$flg" | sed "s/$$1.*$$//"`; \
  }; \
  for flg in $$sane_makeflags; do \
    test $$skip_next = yes && { skip_next=no; continue; }; \
    case $$flg in \
      *=*|--*) continue;; \
        -*I) strip_trailopt 'I'; skip_next=yes;; \
      -*I?*) strip_trailopt 'I';; \
        -*O) strip_trailopt 'O'; skip_next=yes;; \
      -*O?*) strip_trailopt 'O';; \
        -*l) strip_trailopt 'l'; skip_next=yes;; \
      -*l?*) strip_trailopt 'l';; \
      -[dEDm]) skip_next=yes;; \
      -[JT]) skip_next=yes;; \
    esac; \
    case $$flg in \
      *$$target_option*) has_opt=yes; break;; \
    esac; \
  done; \
  test $$has_opt = yes
am__make_dryrun = (target_option=n; $(am__make_running_with_option))
am__make_keepgoing = (target_option=k; $(am__make_running_with_option))
pkgdatadir = $(datadir)/mesa
pkgincludedir = $(includedir)/mesa
pkglibdir = $(libdir)/mesa
pkglibexecdir = $(libexecdir)/mesa
am__cd = CDPATH="$${ZSH_VERSION+.}$(PATH_SEPARATOR)" && cd
install_sh_DATA = $(install_sh) -c -m 644
install_sh_PROGRAM = $(install_sh) -c
install_sh_SCRIPT = $(install_sh) -c
INSTALL_HEADER = $(INSTALL_DATA)
transform = $(program_transform_name)
NORMAL_INSTALL = :
PRE_INSTALL = :
POST_INSTALL = :
NORMAL_UNINSTALL = :
PRE_UNINSTALL = :
POST_UNINSTALL = :
build_triplet = x86_64-pc-linux-gnu
host_triplet = x86_64-pc-linux-gnu
target_triplet = x86_64-pc-linux-gnu
am__append_1 = $(COMMON_LIBS)

# nir_to_llvm requires LLVM 3.9, which is only required as a minimum when
# radv is built.
#am__append_2 = $(AMD_NIR_FILES)
subdir = src/amd
ACLOCAL_M4 = $(top_srcdir)/aclocal.m4
am__aclocal_m4_deps = $(top_srcdir)/m4/ax_check_gnu_make.m4 \
	$(top_srcdir)/m4/ax_check_python_mako_module.m4 \
	$(top_srcdir)/m4/ax_gcc_builtin.m4 \
	$(top_srcdir)/m4/ax_gcc_func_attribute.m4 \
	$(top_srcdir)/m4/ax_prog_bison.m4 \
	$(top_srcdir)/m4/ax_prog_flex.m4 \
	$(top_srcdir)/m4/ax_pthread.m4 $(top_srcdir)/m4/libtool.m4 \
	$(top_srcdir)/m4/ltoptions.m4 $(top_srcdir)/m4/ltsugar.m4 \
	$(top_srcdir)/m4/ltversion.m4 $(top_srcdir)/m4/lt~obsolete.m4 \
	$(top_srcdir)/VERSION $(top_srcdir)/configure.ac
am__configure_deps = $(am__aclocal_m4_deps) $(CONFIGURE_DEPENDENCIES) \
	$(ACLOCAL_M4)
DIST_COMMON = $(srcdir)/Makefile.am $(am__DIST_COMMON)
mkinstalldirs = $(install_sh) -d
CONFIG_CLEAN_FILES =
CONFIG_CLEAN_VPATH_FILES =
LTLIBRARIES = $(noinst_LTLIBRARIES)
addrlib_libamdgpu_addrlib_la_LIBADD =
am__dirstamp = $(am__leading_dot)dirstamp
am__objects_1 = addrlib/libamdgpu_addrlib_la-addrinterface.lo \
	addrlib/core/libamdgpu_addrlib_la-addrelemlib.lo \
	addrlib/core/libamdgpu_addrlib_la-addrlib.lo \
	addrlib/core/libamdgpu_addrlib_la-addrlib1.lo \
	addrlib/core/libamdgpu_addrlib_la-addrlib2.lo \
	addrlib/core/libamdgpu_addrlib_la-addrobject.lo \
	addrlib/gfx9/libamdgpu_addrlib_la-coord.lo \
	addrlib/gfx9/libamdgpu_addrlib_la-gfx9addrlib.lo \
	addrlib/gfx9/libamdgpu_addrlib_la-rbmap.lo \
	addrlib/r800/libamdgpu_addrlib_la-ciaddrlib.lo \
	addrlib/r800/libamdgpu_addrlib_la-egbaddrlib.lo \
	addrlib/r800/libamdgpu_addrlib_la-siaddrlib.lo
am_addrlib_libamdgpu_addrlib_la_OBJECTS = $(am__objects_1)
addrlib_libamdgpu_addrlib_la_OBJECTS =  \
	$(am_addrlib_libamdgpu_addrlib_la_OBJECTS)
AM_V_lt = $(am__v_lt_$(V))
am__v_lt_ = $(am__v_lt_$(AM_DEFAULT_VERBOSITY))
am__v_lt_0 = --silent
am__v_lt_1 = 
addrlib_libamdgpu_addrlib_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
am__DEPENDENCIES_1 =
common_libamd_common_la_DEPENDENCIES = $(am__DEPENDENCIES_1)
am__common_libamd_common_la_SOURCES_DIST = common/ac_binary.c \
	common/ac_binary.h common/ac_llvm_build.c \
	common/ac_llvm_build.h common/ac_llvm_helper.cpp \
	common/ac_llvm_util.c common/ac_llvm_util.h common/ac_debug.c \
	common/ac_debug.h common/sid_tables.h common/ac_nir_to_llvm.c \
	common/ac_nir_to_llvm.h
am__objects_2 = common/libamd_common_la-ac_binary.lo \
	common/libamd_common_la-ac_llvm_build.lo \
	common/libamd_common_la-ac_llvm_helper.lo \
	common/libamd_common_la-ac_llvm_util.lo
am__objects_3 = common/libamd_common_la-ac_debug.lo
am__objects_4 =
am__objects_5 = common/libamd_common_la-ac_nir_to_llvm.lo
#am__objects_6 = $(am__objects_5)
am_common_libamd_common_la_OBJECTS =  \
	$(am__objects_2) $(am__objects_3) \
	$(am__objects_4) $(am__objects_6)
common_libamd_common_la_OBJECTS =  \
	$(am_common_libamd_common_la_OBJECTS)
common_libamd_common_la_LINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX \
	$(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=link $(CXXLD) \
	$(common_libamd_common_la_CXXFLAGS) $(CXXFLAGS) $(AM_LDFLAGS) \
	$(LDFLAGS) -o $@
am_common_libamd_common_la_rpath =
AM_V_P = $(am__v_P_$(V))
am__v_P_ = $(am__v_P_$(AM_DEFAULT_VERBOSITY))
am__v_P_0 = false
am__v_P_1 = :
AM_V_GEN = $(am__v_GEN_$(V))
am__v_GEN_ = $(am__v_GEN_$(AM_DEFAULT_VERBOSITY))
am__v_GEN_0 = @echo "  GEN     " $@;
am__v_GEN_1 = 
AM_V_at = $(am__v_at_$(V))
am__v_at_ = $(am__v_at_$(AM_DEFAULT_VERBOSITY))
am__v_at_0 = @
am__v_at_1 = 
DEFAULT_INCLUDES = -I.
depcomp = $(SHELL) $(top_srcdir)/bin/depcomp
am__maybe_remake_depfiles = depfiles
am__depfiles_remade =  \
	addrlib/$(DEPDIR)/libamdgpu_addrlib_la-addrinterface.Plo \
	addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrelemlib.Plo \
	addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib.Plo \
	addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib1.Plo \
	addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib2.Plo \
	addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrobject.Plo \
	addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-coord.Plo \
	addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-gfx9addrlib.Plo \
	addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-rbmap.Plo \
	addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-ciaddrlib.Plo \
	addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-egbaddrlib.Plo \
	addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-siaddrlib.Plo \
	common/$(DEPDIR)/libamd_common_la-ac_binary.Plo \
	common/$(DEPDIR)/libamd_common_la-ac_debug.Plo \
	common/$(DEPDIR)/libamd_common_la-ac_llvm_build.Plo \
	common/$(DEPDIR)/libamd_common_la-ac_llvm_helper.Plo \
	common/$(DEPDIR)/libamd_common_la-ac_llvm_util.Plo \
	common/$(DEPDIR)/libamd_common_la-ac_nir_to_llvm.Plo
am__mv = mv -f
COMPILE = $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) \
	$(CPPFLAGS) $(AM_CFLAGS) $(CFLAGS)
LTCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CFLAGS) $(CFLAGS)
AM_V_CC = $(am__v_CC_$(V))
am__v_CC_ = $(am__v_CC_$(AM_DEFAULT_VERBOSITY))
am__v_CC_0 = @echo "  CC      " $@;
am__v_CC_1 = 
CCLD = $(CC)
LINK = $(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CCLD) $(AM_CFLAGS) $(CFLAGS) \
	$(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CCLD = $(am__v_CCLD_$(V))
am__v_CCLD_ = $(am__v_CCLD_$(AM_DEFAULT_VERBOSITY))
am__v_CCLD_0 = @echo "  CCLD    " $@;
am__v_CCLD_1 = 
CXXCOMPILE = $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) \
	$(AM_CPPFLAGS) $(CPPFLAGS) $(AM_CXXFLAGS) $(CXXFLAGS)
LTCXXCOMPILE = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) \
	$(DEFAULT_INCLUDES) $(INCLUDES) $(AM_CPPFLAGS) $(CPPFLAGS) \
	$(AM_CXXFLAGS) $(CXXFLAGS)
AM_V_CXX = $(am__v_CXX_$(V))
am__v_CXX_ = $(am__v_CXX_$(AM_DEFAULT_VERBOSITY))
am__v_CXX_0 = @echo "  CXX     " $@;
am__v_CXX_1 = 
CXXLD = $(CXX)
CXXLINK = $(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) \
	$(LIBTOOLFLAGS) --mode=link $(CXXLD) $(AM_CXXFLAGS) \
	$(CXXFLAGS) $(AM_LDFLAGS) $(LDFLAGS) -o $@
AM_V_CXXLD = $(am__v_CXXLD_$(V))
am__v_CXXLD_ = $(am__v_CXXLD_$(AM_DEFAULT_VERBOSITY))
am__v_CXXLD_0 = @echo "  CXXLD   " $@;
am__v_CXXLD_1 = 
SOURCES = $(addrlib_libamdgpu_addrlib_la_SOURCES) \
	$(common_libamd_common_la_SOURCES)
DIST_SOURCES = $(addrlib_libamdgpu_addrlib_la_SOURCES) \
	$(am__common_libamd_common_la_SOURCES_DIST)
am__can_run_installinfo = \
  case $$AM_UPDATE_INFO_DIR in \
    n|no|NO) false;; \
    *) (install-info --version) >/dev/null 2>&1;; \
  esac
am__tagged_files = $(HEADERS) $(SOURCES) $(TAGS_FILES) $(LISP)
# Read a list of newline-separated strings from the standard input,
# and print each of them once, without duplicates.  Input order is
# *not* preserved.
am__uniquify_input = $(AWK) '\
  BEGIN { nonempty = 0; } \
  { items[$$0] = 1; nonempty = 1; } \
  END { if (nonempty) { for (i in items) print i; }; } \
'
# Make sure the list of sources is unique.  This is necessary because,
# e.g., the same source file might be shared among _SOURCES variables
# for different programs/libraries.
am__define_uniq_tagged_files = \
  list='$(am__tagged_files)'; \
  unique=`for i in $$list; do \
    if test -f "$$i"; then echo $$i; else echo $(srcdir)/$$i; fi; \
  done | $(am__uniquify_input)`
ETAGS = etags
CTAGS = ctags
am__DIST_COMMON = $(srcdir)/Makefile.addrlib.am \
	$(srcdir)/Makefile.common.am $(srcdir)/Makefile.in \
	$(srcdir)/Makefile.sources $(top_srcdir)/bin/depcomp
DISTFILES = $(DIST_COMMON) $(DIST_SOURCES) $(TEXINFOS) $(EXTRA_DIST)
ACLOCAL = ${SHELL} /home/lele/Codes/epos/repository/external/bop_renderer/osmesa-install/build/mesa-17.1.6/bin/missing aclocal-1.16
AMDGPU_CFLAGS = 
AMDGPU_LIBS = 
AMTAR = $${TAR-tar}
AM_DEFAULT_VERBOSITY = 0
ANDROID_CFLAGS = 
ANDROID_LIBS = 
AR = ar
AUTOCONF = ${SHELL} /home/lele/Codes/epos/repository/external/bop_renderer/osmesa-install/build/mesa-17.1.6/bin/missing autoconf
AUTOHEADER = ${SHELL} /home/lele/Codes/epos/repository/external/bop_renderer/osmesa-install/build/mesa-17.1.6/bin/missing autoheader
AUTOMAKE = ${SHELL} /home/lele/Codes/epos/repository/external/bop_renderer/osmesa-install/build/mesa-17.1.6/bin/missing automake-1.16
AWK = mawk
BSYMBOLIC = -Wl,-Bsymbolic
CC = gcc
CCAS = gcc
CCASDEPMODE = depmode=none
CCASFLAGS = -O3
CCDEPMODE = depmode=none
CFLAGS = -O3 -Wall -std=c99 -Werror=implicit-function-declaration -Werror=missing-prototypes -fno-math-errno -fno-trapping-math 
CLANG_RESOURCE_DIR = 
CLOCK_LIB = 
CLOVER_STD_OVERRIDE = 
CPP = gcc -E
CPPFLAGS = 
CXX = g++
CXXCPP = g++ -E
CXXDEPMODE = depmode=none
CXXFLAGS = -O3 -Wall -fno-math-errno -fno-trapping-math 
CYGPATH_W = echo
D3D_DRIVER_INSTALL_DIR = ${exec_prefix}/lib/d3d
DEFINES = -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS -D_GNU_SOURCE -DUSE_SSE41 -DUSE_GCC_ATOMIC_BUILTINS -DNDEBUG -DTEXTURE_FLOAT_ENABLED -DUSE_X86_64_ASM -DHAVE_SYS_SYSCTL_H -DHAVE_STRTOF -DHAVE_MKOSTEMP -DHAVE_DLOPEN -DHAVE_DL_ITERATE_PHDR -DHAVE_POSIX_MEMALIGN -DENABLE_SHADER_CACHE -DCHAN_BITS=32 -DDEFAULT_SOFTWARE_DEPTH_BITS=31 -DMESA_EGL_NO_X11_HEADERS -DHAVE_LLVM=0x0400 -DMESA_LLVM_VERSION_PATCH=1
DEFS = -DPACKAGE_NAME=\"Mesa\" -DPACKAGE_TARNAME=\"mesa\" -DPACKAGE_VERSION=\"17.1.6\" -DPACKAGE_STRING=\"Mesa\ 17.1.6\" -DPACKAGE_BUGREPORT=\"https://bugs.freedesktop.org/enter_bug.cgi\?product=Mesa\" -DPACKAGE_URL=\"\" -DPACKAGE=\"mesa\" -DVERSION=\"17.1.6\" -DSTDC_HEADERS=1 -DHAVE_SYS_TYPES_H=1 -DHAVE_SYS_STAT_H=1 -DHAVE_STDLIB_H=1 -DHAVE_STRING_H=1 -DHAVE_MEMORY_H=1 -DHAVE_STRINGS_H=1 -DHAVE_INTTYPES_H=1 -DHAVE_STDINT_H=1 -DHAVE_UNISTD_H=1 -DHAVE_DLFCN_H=1 -DLT_OBJDIR=\".libs/\" -DHAVE___BUILTIN_BSWAP32=1 -DHAVE___BUILTIN_BSWAP64=1 -DHAVE___BUILTIN_CLZ=1 -DHAVE___BUILTIN_CLZLL=1 -DHAVE___BUILTIN_CTZ=1 -DHAVE___BUILTIN_EXPECT=1 -DHAVE___BUILTIN_FFS=1 -DHAVE___BUILTIN_FFSLL=1 -DHAVE___BUILTIN_POPCOUNT=1 -DHAVE___BUILTIN_POPCOUNTLL=1 -DHAVE___BUILTIN_UNREACHABLE=1 -DHAVE_FUNC_ATTRIBUTE_CONST=1 -DHAVE_FUNC_ATTRIBUTE_FLATTEN=1 -DHAVE_FUNC_ATTRIBUTE_FORMAT=1 -DHAVE_FUNC_ATTRIBUTE_MALLOC=1 -DHAVE_FUNC_ATTRIBUTE_PACKED=1 -DHAVE_FUNC_ATTRIBUTE_PURE=1 -DHAVE_FUNC_ATTRIBUTE_RETURNS_NONNULL=1 -DHAVE_FUNC_ATTRIBUTE_UNUSED=1 -DHAVE_FUNC_ATTRIBUTE_VISIBILITY=1 -DHAVE_FUNC_ATTRIBUTE_WARN_UNUSED_RESULT=1 -DHAVE_FUNC_ATTRIBUTE_WEAK=1 -DHAVE_FUNC_ATTRIBUTE_ALIAS=1 -DMAJOR_IN_SYSMACROS=1 -DHAVE_DLADDR=1 -DHAVE_CLOCK_GETTIME=1 -DHAVE_PTHREAD_PRIO_INHERIT=1 -DHAVE_PTHREAD=1
DEPDIR = .deps
DLLTOOL = false
DLOPEN_LIBS = -ldl
DRI2PROTO_CFLAGS = 
DRI2PROTO_LIBS = 
DRIGL_CFLAGS = 
DRIGL_LIBS = 
DRI_DRIVER_INSTALL_DIR = ${libdir}/dri
DRI_DRIVER_SEARCH_DIR = ${DRI_DRIVER_INSTALL_DIR}
DRI_LIB_DEPS = 
DRI_PC_REQ_PRIV = 
DSYMUTIL = 
DUMPBIN = 
ECHO_C = 
ECHO_N = -n
ECHO_T = 
EGL_CFLAGS = 
EGL_LIB_DEPS = 
EGL_NATIVE_PLATFORM = _EGL_INVALID_PLATFORM
EGREP = /usr/bin/grep -E
ETNAVIV_CFLAGS = 
ETNAVIV_LIBS = 
EXEEXT = 
EXPAT_CFLAGS = 
EXPAT_LIBS = 
FGREP = /usr/bin/grep -F
FREEDRENO_CFLAGS = 
FREEDRENO_LIBS = 
GALLIUM_PIPE_LOADER_DEFINES = 
GBM_PC_LIB_PRIV = -ldl
GBM_PC_REQ_PRIV = 
GC_SECTIONS = -Wl,--gc-sections
GLESv1_CM_LIB_DEPS =  -lm -lpthread -pthread -ldl
GLESv1_CM_PC_LIB_PRIV = -lm -lpthread -pthread -ldl
GLESv2_LIB_DEPS =  -lm -lpthread -pthread -ldl
GLESv2_PC_LIB_PRIV = -lm -lpthread -pthread -ldl
GLPROTO_CFLAGS = 
GLPROTO_LIBS = 
GLVND_CFLAGS = 
GLVND_LIBS = 
GLX_TLS = no
GL_LIB = GL
GL_LIB_DEPS = 
GL_PC_CFLAGS =  -DMESA_EGL_NO_X11_HEADERS
GL_PC_LIB_PRIV = 
GL_PC_REQ_PRIV = 
GREP = /usr/bin/grep
HAVE_XF86VIDMODE = 
INDENT = cat
INDENT_FLAGS = 
INSTALL = /usr/bin/install -c
INSTALL_DATA = ${INSTALL} -m 644
INSTALL_PROGRAM = ${INSTALL}
INSTALL_SCRIPT = ${INSTALL}
INSTALL_STRIP_PROGRAM = $(install_sh) -c -s
INTEL_CFLAGS = 
INTEL_LIBS = 
LD = /usr/bin/ld -m elf_x86_64
LDFLAGS = 
LD_NO_UNDEFINED = -Wl,--no-undefined
LEX = ${SHELL} /home/lele/Codes/epos/repository/external/bop_renderer/osmesa-install/build/mesa-17.1.6/bin/missing flex
LEXLIB = 
LEX_OUTPUT_ROOT = 
LIBCLC_INCLUDEDIR = 
LIBCLC_LIBEXECDIR = 
LIBDRM_CFLAGS = 
LIBDRM_LIBS = 
LIBELF_CFLAGS = 
LIBELF_LIBS = 
LIBGLVND_DATADIR = 
LIBOBJS = 
LIBS = 
LIBSENSORS_LIBS = 
LIBTOOL = $(SHELL) $(top_builddir)/libtool
LIBUNWIND_CFLAGS = 
LIBUNWIND_LIBS = 
LIB_DIR = lib
LIB_EXT = so
LIPO = 
LLVM_CFLAGS = -I/home/lele/Codes/epos/repository/external/llvm/include -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS
LLVM_CONFIG = /home/lele/Codes/epos/repository/external/llvm/bin/llvm-config
LLVM_CXXFLAGS = -I/home/lele/Codes/epos/repository/external/llvm/include -std=c++11 -D__STDC_CONSTANT_MACROS -D__STDC_FORMAT_MACROS -D__STDC_LIMIT_MACROS
LLVM_INCLUDEDIR = /home/lele/Codes/epos/repository/external/llvm/include
LLVM_LDFLAGS = -L/home/lele/Codes/epos/repository/external/llvm/lib 
LLVM_LIBS = -lLLVMX86Disassembler -lLLVMX86AsmParser -lLLVMX86CodeGen -lLLVMGlobalISel -lLLVMSelectionDAG -lLLVMAsmPrinter -lLLVMDebugInfoCodeView -lLLVMDebugInfoMSF -lLLVMCodeGen -lLLVMScalarOpts -lLLVMInstCombine -lLLVMTransformUtils -lLLVMX86Desc -lLLVMMCDisassembler -lLLVMX86Info -lLLVMX86AsmPrinter -lLLVMX86Utils -lLLVMMCJIT -lLLVMExecutionEngine -lLLVMTarget -lLLVMRuntimeDyld -lLLVMBitWriter -lLLVMAnalysis -lLLVMObject -lLLVMMCParser -lLLVMMC -lLLVMBitReader -lLLVMProfileData -lLLVMCore -lLLVMSupport -lLLVMDemangle 
LN_S = ln -s
LTLIBOBJS = 
LT_SYS_LIBRARY_PATH = 
MAKEINFO = ${SHELL} /home/lele/Codes/epos/repository/external/bop_renderer/osmesa-install/build/mesa-17.1.6/bin/missing makeinfo
MANIFEST_TOOL = :
MKDIR_P = /usr/bin/mkdir -p
MSVC2013_COMPAT_CFLAGS = -Werror=pointer-arith -Werror=vla
MSVC2013_COMPAT_CXXFLAGS = -Werror=pointer-arith -Werror=vla
NINE_MAJOR = 1
NINE_MINOR = 0
NINE_TINY = 0
NINE_VERSION = 1.0.0
NM = /usr/bin/nm -B
NMEDIT = 
NOUVEAU_CFLAGS = 
NOUVEAU_LIBS = 
NVVIEUX_CFLAGS = 
NVVIEUX_LIBS = 
OBJDUMP = objdump
OBJEXT = o
OMX_CFLAGS = 
OMX_LIBS = 
OMX_LIB_INSTALL_DIR = 
OPENCL_LIBNAME = 
OPENCL_VERSION = 1
OSMESA_LIB = OSMesa32
OSMESA_LIB_DEPS = -lm -lpthread -pthread  -ldl
OSMESA_PC_LIB_PRIV = -lm -lpthread -pthread  -ldl
OSMESA_PC_REQ = 
OSMESA_VERSION = 8
OTOOL = 
OTOOL64 = 
PACKAGE = mesa
PACKAGE_BUGREPORT = https://bugs.freedesktop.org/enter_bug.cgi?product=Mesa
PACKAGE_NAME = Mesa
PACKAGE_STRING = Mesa 17.1.6
PACKAGE_TARNAME = mesa
PACKAGE_URL = 
PACKAGE_VERSION = 17.1.6
PATH_SEPARATOR = :
PKG_CONFIG = /usr/bin/pkg-config
PKG_CONFIG_LIBDIR = 
PKG_CONFIG_PATH = 
POSIX_SHELL = 
PTHREADSTUBS_CFLAGS =  
PTHREADSTUBS_LIBS =  
PTHREAD_CC = gcc
PTHREAD_CFLAGS = -pthread
PTHREAD_LIBS = -lpthread -pthread
PWR8_CFLAGS = 
PYTHON2 = python
RADEON_CFLAGS = 
RADEON_LIBS = 
RANLIB = ranlib
RM = rm -f
SED = /usr/bin/sed
SELINUX_CFLAGS = 
SELINUX_LIBS = 
SET_MAKE = 
SHELL = /bin/bash
SIMPENROSE_CFLAGS = 
SIMPENROSE_LIBS = 
SSE41_CFLAGS = -msse4.1
STRIP = strip
SWR_AVX2_CXXFLAGS = -mavx2 -mfma -mbmi2 -mf16c
SWR_AVX_CXXFLAGS = -mavx
SWR_CXX11_CXXFLAGS = 
VALGRIND_CFLAGS = 
VALGRIND_LIBS = 
VA_CFLAGS = 
VA_LIBS = 
VA_LIB_INSTALL_DIR = ${exec_prefix}/lib/dri
VA_MAJOR = 
VA_MINOR = 
VC4_CFLAGS = 
VC4_LIBS = 
VDPAU_CFLAGS = 
VDPAU_LIBS = 
VDPAU_LIB_INSTALL_DIR = ${libdir}/vdpau
VDPAU_MAJOR = 1
VDPAU_MINOR = 0
VERSION = 17.1.6
VISIBILITY_CFLAGS = -fvisibility=hidden
VISIBILITY_CXXFLAGS = -fvisibility=hidden
VL_CFLAGS = 
VL_LIBS = 
VULKAN_ICD_INSTALL_DIR = ${datarootdir}/vulkan/icd.d
WAYLAND_CFLAGS = 
WAYLAND_LIBS = 
WAYLAND_SCANNER = :
WAYLAND_SCANNER_CFLAGS = 
WAYLAND_SCANNER_LIBS = 
X11_INCLUDES = 
XA_MAJOR = 2
XA_MINOR = 3
XA_TINY = 0
XA_VERSION = 2.3.0
XCB_DRI2_CFLAGS = 
XCB_DRI2_LIBS = 
XCB_DRI3_CFLAGS = 
XCB_DRI3_LIBS = 
XF86VIDMODE_CFLAGS = 
XF86VIDMODE_LIBS = 
XLIBGL_CFLAGS = 
XLIBGL_LIBS = 
XVMC_CFLAGS = 
XVMC_LIBS = 
XVMC_LIB_INSTALL_DIR = ${libdir}
XVMC_MAJOR = 1
XVMC_MINOR = 0
YACC = yacc
YFLAGS = 
ZLIB_CFLAGS = 
ZLIB_LIBS = -lz
abs_builddir = /home/lele/Codes/epos/repository/external/bop_renderer/osmesa-install/build/mesa-17.1.6/src/amd
abs_srcdir = /home/lele/Codes/epos/repository/external/bop_renderer/osmesa-install/build/mesa-17.1.6/src/amd
abs_top_builddir = /home/lele/Codes/epos/repository/external/bop_renderer/osmesa-install/build/mesa-17.1.6
abs_top_srcdir = /home/lele/Codes/epos/repository/external/bop_renderer/osmesa-install/build/mesa-17.1.6
ac_ct_AR = ar
ac_ct_CC = gcc
ac_ct_CXX = 
ac_ct_DUMPBIN = 
acv_mako_found = no
am__include = include
am__leading_dot = .
am__quote = 
am__tar = tar --format=ustar -chf - "$$tardir"
am__untar = tar -xf -
ax_pthread_config = 
bindir = ${exec_prefix}/bin
build = x86_64-pc-linux-gnu
build_alias = 
build_cpu = x86_64
build_os = linux-gnu
build_vendor = pc
builddir = .
datadir = ${datarootdir}
datarootdir = ${prefix}/share
docdir = ${datarootdir}/doc/${PACKAGE_TARNAME}
dvidir = ${docdir}
exec_prefix = ${prefix}
host = x86_64-pc-linux-gnu
host_alias = 
host_cpu = x86_64
host_os = linux-gnu
host_vendor = pc
htmldir = ${docdir}
ifGNUmake = 
includedir = ${prefix}/include
infodir = ${datarootdir}/info
install_sh = ${SHELL} /home/lele/Codes/epos/repository/external/bop_renderer/osmesa-install/build/mesa-17.1.6/bin/install-sh
libdir = ${exec_prefix}/lib
libexecdir = ${exec_prefix}/libexec
localedir = ${datarootdir}/locale
localstatedir = ${prefix}/var
mandir = ${datarootdir}/man
mkdir_p = $(MKDIR_P)
oldincludedir = /usr/include
pdfdir = ${docdir}
prefix = /home/lele/Codes/epos/repository/external/osmesa
program_transform_name = s,x,x,
psdir = ${docdir}
runstatedir = ${localstatedir}/run
sbindir = ${exec_prefix}/sbin
sharedstatedir = ${prefix}/com
srcdir = .
sysconfdir = ${prefix}/etc
target = x86_64-pc-linux-gnu
target_alias = 
target_cpu = x86_64
target_os = linux-gnu
target_vendor = pc
top_build_prefix = ../../
top_builddir = ../..
top_srcdir = ../..
COMMON_HEADER_FILES = \
	common/gfx9d.h \
	common/sid.h \
	common/r600d_common.h \
	common/amd_family.h \
	common/amd_kernel_code_t.h \
	common/amdgpu_id.h

ADDRLIB_FILES = \
	addrlib/addrinterface.cpp \
	addrlib/addrinterface.h \
	addrlib/addrtypes.h \
	addrlib/core/addrcommon.h \
	addrlib/core/addrelemlib.cpp \
	addrlib/core/addrelemlib.h \
	addrlib/core/addrlib.cpp \
	addrlib/core/addrlib.h \
	addrlib/core/addrlib1.cpp \
	addrlib/core/addrlib1.h \
	addrlib/core/addrlib2.cpp \
	addrlib/core/addrlib2.h \
	addrlib/core/addrobject.cpp \
	addrlib/core/addrobject.h \
	addrlib/gfx9/chip/gfx9_enum.h \
	addrlib/gfx9/coord.cpp \
	addrlib/gfx9/coord.h \
	addrlib/gfx9/gfx9addrlib.cpp \
	addrlib/gfx9/gfx9addrlib.h \
	addrlib/gfx9/rbmap.cpp \
	addrlib/gfx9/rbmap.h \
	addrlib/inc/chip/gfx9/gfx9_gb_reg.h \
	addrlib/inc/chip/r800/si_gb_reg.h \
	addrlib/inc/lnx_common_defs.h \
	addrlib/r800/chip/si_ci_vi_merged_enum.h \
	addrlib/r800/ciaddrlib.cpp \
	addrlib/r800/ciaddrlib.h \
	addrlib/r800/egbaddrlib.cpp \
	addrlib/r800/egbaddrlib.h \
	addrlib/r800/siaddrlib.cpp \
	addrlib/r800/siaddrlib.h

AMD_COMPILER_FILES = \
	common/ac_binary.c \
	common/ac_binary.h \
	common/ac_llvm_build.c \
	common/ac_llvm_build.h \
	common/ac_llvm_helper.cpp \
	common/ac_llvm_util.c \
	common/ac_llvm_util.h

AMD_NIR_FILES = \
	common/ac_nir_to_llvm.c \
	common/ac_nir_to_llvm.h

AMD_DEBUG_FILES = \
	common/ac_debug.c \
	common/ac_debug.h

AMD_GENERATED_FILES = \
	common/sid_tables.h

noinst_LTLIBRARIES = $(ADDRLIB_LIBS) $(am__append_1)
EXTRA_DIST = $(COMMON_HEADER_FILES) common/sid_tables.py
ADDRLIB_LIBS = addrlib/libamdgpu_addrlib.la
addrlib_libamdgpu_addrlib_la_CPPFLAGS = \
	-I$(top_srcdir)/src/ \
	-I$(srcdir)/common \
	-I$(srcdir)/addrlib \
	-I$(srcdir)/addrlib/core \
	-I$(srcdir)/addrlib/inc/chip/gfx9 \
	-I$(srcdir)/addrlib/inc/chip/r800 \
	-I$(srcdir)/addrlib/gfx9/chip \
	-I$(srcdir)/addrlib/r800/chip \
	-DBRAHMA_BUILD=1

addrlib_libamdgpu_addrlib_la_CXXFLAGS = \
	$(VISIBILITY_CXXFLAGS)

addrlib_libamdgpu_addrlib_la_SOURCES = $(ADDRLIB_FILES)
COMMON_LIBS = common/libamd_common.la

# TODO cleanup these
common_libamd_common_la_CPPFLAGS = \
	$(VALGRIND_CFLAGS) \
	$(DEFINES) \
	-I$(top_srcdir)/include \
	-I$(top_builddir)/src \
	-I$(top_srcdir)/src \
	-I$(top_builddir)/src/amd/common \
	-I$(top_srcdir)/src/amd/common \
	-I$(top_builddir)/src/compiler \
	-I$(top_builddir)/src/compiler/nir \
	-I$(top_srcdir)/src/compiler \
	-I$(top_srcdir)/src/mapi \
	-I$(top_srcdir)/src/mesa \
	-I$(top_srcdir)/src/mesa/drivers/dri/common \
	-I$(top_srcdir)/src/gallium/auxiliary \
	-I$(top_srcdir)/src/gallium/include

common_libamd_common_la_CFLAGS = \
	$(VISIBILITY_CFLAGS) \
	$(PTHREAD_CFLAGS) \
	$(LLVM_CFLAGS) \
	$(LIBELF_CFLAGS)

common_libamd_common_la_CXXFLAGS = \
	$(VISIBILITY_CXXFLAGS) \
	$(LLVM_CXXFLAGS)

common_libamd_common_la_SOURCES =  \
	$(AMD_COMPILER_FILES) \
	$(AMD_DEBUG_FILES) \
	$(AMD_GENERATED_FILES) $(am__append_2)
common_libamd_common_la_LIBADD = $(LIBELF_LIBS)
BUILT_SOURCES = $(AMD_GENERATED_FILES)
all: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) all-am

.SUFFIXES:
.SUFFIXES: .c .cpp .lo .o .obj
$(srcdir)/Makefile.in:  $(srcdir)/Makefile.am $(srcdir)/Makefile.sources $(srcdir)/Makefile.addrlib.am $(srcdir)/Makefile.common.am $(am__configure_deps)
	@for dep in $?; do \
	  case '$(am__configure_deps)' in \
	    *$$dep*) \
	      ( cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh ) \
	        && { if test -f $@; then exit 0; else break; fi; }; \
	      exit 1;; \
	  esac; \
	done; \
	echo ' cd $(top_srcdir) && $(AUTOMAKE) --foreign src/amd/Makefile'; \
	$(am__cd) $(top_srcdir) && \
	  $(AUTOMAKE) --foreign src/amd/Makefile
Makefile: $(srcdir)/Makefile.in $(top_builddir)/config.status
	@case '$?' in \
	  *config.status*) \
	    cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh;; \
	  *) \
	    echo ' cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles)'; \
	    cd $(top_builddir) && $(SHELL) ./config.status $(subdir)/$@ $(am__maybe_remake_depfiles);; \
	esac;
$(srcdir)/Makefile.sources $(srcdir)/Makefile.addrlib.am $(srcdir)/Makefile.common.am $(am__empty):

$(top_builddir)/config.status: $(top_srcdir)/configure $(CONFIG_STATUS_DEPENDENCIES)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh

$(top_srcdir)/configure:  $(am__configure_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(ACLOCAL_M4):  $(am__aclocal_m4_deps)
	cd $(top_builddir) && $(MAKE) $(AM_MAKEFLAGS) am--refresh
$(am__aclocal_m4_deps):

clean-noinstLTLIBRARIES:
	-test -z "$(noinst_LTLIBRARIES)" || rm -f $(noinst_LTLIBRARIES)
	@list='$(noinst_LTLIBRARIES)'; \
	locs=`for p in $$list; do echo $$p; done | \
	      sed 's|^[^/]*$$|.|; s|/[^/]*$$||; s|$$|/so_locations|' | \
	      sort -u`; \
	test -z "$$locs" || { \
	  echo rm -f $${locs}; \
	  rm -f $${locs}; \
	}
addrlib/$(am__dirstamp):
	@$(MKDIR_P) addrlib
	@: > addrlib/$(am__dirstamp)
addrlib/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) addrlib/$(DEPDIR)
	@: > addrlib/$(DEPDIR)/$(am__dirstamp)
addrlib/libamdgpu_addrlib_la-addrinterface.lo:  \
	addrlib/$(am__dirstamp) addrlib/$(DEPDIR)/$(am__dirstamp)
addrlib/core/$(am__dirstamp):
	@$(MKDIR_P) addrlib/core
	@: > addrlib/core/$(am__dirstamp)
addrlib/core/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) addrlib/core/$(DEPDIR)
	@: > addrlib/core/$(DEPDIR)/$(am__dirstamp)
addrlib/core/libamdgpu_addrlib_la-addrelemlib.lo:  \
	addrlib/core/$(am__dirstamp) \
	addrlib/core/$(DEPDIR)/$(am__dirstamp)
addrlib/core/libamdgpu_addrlib_la-addrlib.lo:  \
	addrlib/core/$(am__dirstamp) \
	addrlib/core/$(DEPDIR)/$(am__dirstamp)
addrlib/core/libamdgpu_addrlib_la-addrlib1.lo:  \
	addrlib/core/$(am__dirstamp) \
	addrlib/core/$(DEPDIR)/$(am__dirstamp)
addrlib/core/libamdgpu_addrlib_la-addrlib2.lo:  \
	addrlib/core/$(am__dirstamp) \
	addrlib/core/$(DEPDIR)/$(am__dirstamp)
addrlib/core/libamdgpu_addrlib_la-addrobject.lo:  \
	addrlib/core/$(am__dirstamp) \
	addrlib/core/$(DEPDIR)/$(am__dirstamp)
addrlib/gfx9/$(am__dirstamp):
	@$(MKDIR_P) addrlib/gfx9
	@: > addrlib/gfx9/$(am__dirstamp)
addrlib/gfx9/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) addrlib/gfx9/$(DEPDIR)
	@: > addrlib/gfx9/$(DEPDIR)/$(am__dirstamp)
addrlib/gfx9/libamdgpu_addrlib_la-coord.lo:  \
	addrlib/gfx9/$(am__dirstamp) \
	addrlib/gfx9/$(DEPDIR)/$(am__dirstamp)
addrlib/gfx9/libamdgpu_addrlib_la-gfx9addrlib.lo:  \
	addrlib/gfx9/$(am__dirstamp) \
	addrlib/gfx9/$(DEPDIR)/$(am__dirstamp)
addrlib/gfx9/libamdgpu_addrlib_la-rbmap.lo:  \
	addrlib/gfx9/$(am__dirstamp) \
	addrlib/gfx9/$(DEPDIR)/$(am__dirstamp)
addrlib/r800/$(am__dirstamp):
	@$(MKDIR_P) addrlib/r800
	@: > addrlib/r800/$(am__dirstamp)
addrlib/r800/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) addrlib/r800/$(DEPDIR)
	@: > addrlib/r800/$(DEPDIR)/$(am__dirstamp)
addrlib/r800/libamdgpu_addrlib_la-ciaddrlib.lo:  \
	addrlib/r800/$(am__dirstamp) \
	addrlib/r800/$(DEPDIR)/$(am__dirstamp)
addrlib/r800/libamdgpu_addrlib_la-egbaddrlib.lo:  \
	addrlib/r800/$(am__dirstamp) \
	addrlib/r800/$(DEPDIR)/$(am__dirstamp)
addrlib/r800/libamdgpu_addrlib_la-siaddrlib.lo:  \
	addrlib/r800/$(am__dirstamp) \
	addrlib/r800/$(DEPDIR)/$(am__dirstamp)

addrlib/libamdgpu_addrlib.la: $(addrlib_libamdgpu_addrlib_la_OBJECTS) $(addrlib_libamdgpu_addrlib_la_DEPENDENCIES) $(EXTRA_addrlib_libamdgpu_addrlib_la_DEPENDENCIES) addrlib/$(am__dirstamp)
	$(AM_V_CXXLD)$(addrlib_libamdgpu_addrlib_la_LINK)  $(addrlib_libamdgpu_addrlib_la_OBJECTS) $(addrlib_libamdgpu_addrlib_la_LIBADD) $(LIBS)
common/$(am__dirstamp):
	@$(MKDIR_P) common
	@: > common/$(am__dirstamp)
common/$(DEPDIR)/$(am__dirstamp):
	@$(MKDIR_P) common/$(DEPDIR)
	@: > common/$(DEPDIR)/$(am__dirstamp)
common/libamd_common_la-ac_binary.lo: common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)
common/libamd_common_la-ac_llvm_build.lo: common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)
common/libamd_common_la-ac_llvm_helper.lo: common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)
common/libamd_common_la-ac_llvm_util.lo: common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)
common/libamd_common_la-ac_debug.lo: common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)
common/libamd_common_la-ac_nir_to_llvm.lo: common/$(am__dirstamp) \
	common/$(DEPDIR)/$(am__dirstamp)

common/libamd_common.la: $(common_libamd_common_la_OBJECTS) $(common_libamd_common_la_DEPENDENCIES) $(EXTRA_common_libamd_common_la_DEPENDENCIES) common/$(am__dirstamp)
	$(AM_V_CXXLD)$(common_libamd_common_la_LINK) $(am_common_libamd_common_la_rpath) $(common_libamd_common_la_OBJECTS) $(common_libamd_common_la_LIBADD) $(LIBS)

mostlyclean-compile:
	-rm -f *.$(OBJEXT)
	-rm -f addrlib/*.$(OBJEXT)
	-rm -f addrlib/*.lo
	-rm -f addrlib/core/*.$(OBJEXT)
	-rm -f addrlib/core/*.lo
	-rm -f addrlib/gfx9/*.$(OBJEXT)
	-rm -f addrlib/gfx9/*.lo
	-rm -f addrlib/r800/*.$(OBJEXT)
	-rm -f addrlib/r800/*.lo
	-rm -f common/*.$(OBJEXT)
	-rm -f common/*.lo

distclean-compile:
	-rm -f *.tab.c

#include addrlib/$(DEPDIR)/libamdgpu_addrlib_la-addrinterface.Plo # am--include-marker
#include addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrelemlib.Plo # am--include-marker
#include addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib.Plo # am--include-marker
#include addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib1.Plo # am--include-marker
#include addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib2.Plo # am--include-marker
#include addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrobject.Plo # am--include-marker
#include addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-coord.Plo # am--include-marker
#include addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-gfx9addrlib.Plo # am--include-marker
#include addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-rbmap.Plo # am--include-marker
#include addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-ciaddrlib.Plo # am--include-marker
#include addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-egbaddrlib.Plo # am--include-marker
#include addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-siaddrlib.Plo # am--include-marker
#include common/$(DEPDIR)/libamd_common_la-ac_binary.Plo # am--include-marker
#include common/$(DEPDIR)/libamd_common_la-ac_debug.Plo # am--include-marker
#include common/$(DEPDIR)/libamd_common_la-ac_llvm_build.Plo # am--include-marker
#include common/$(DEPDIR)/libamd_common_la-ac_llvm_helper.Plo # am--include-marker
#include common/$(DEPDIR)/libamd_common_la-ac_llvm_util.Plo # am--include-marker
#include common/$(DEPDIR)/libamd_common_la-ac_nir_to_llvm.Plo # am--include-marker

$(am__depfiles_remade):
	@$(MKDIR_P) $(@D)
	@echo '# dummy' >$@-t && $(am__mv) $@-t $@

am--depfiles: $(am__depfiles_remade)

.c.o:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ $<

.c.obj:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
#	$(COMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CC)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(COMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.c.lo:
#	$(AM_V_CC)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(LTCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CC)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LTCOMPILE) -c -o $@ $<

common/libamd_common_la-ac_binary.lo: common/ac_binary.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libamd_common_la_CPPFLAGS) $(CPPFLAGS) $(common_libamd_common_la_CFLAGS) $(CFLAGS) -MT common/libamd_common_la-ac_binary.lo -MD -MP -MF common/$(DEPDIR)/libamd_common_la-ac_binary.Tpo -c -o common/libamd_common_la-ac_binary.lo `test -f 'common/ac_binary.c' || echo '$(srcdir)/'`common/ac_binary.c
#	$(AM_V_at)$(am__mv) common/$(DEPDIR)/libamd_common_la-ac_binary.Tpo common/$(DEPDIR)/libamd_common_la-ac_binary.Plo
#	$(AM_V_CC)source='common/ac_binary.c' object='common/libamd_common_la-ac_binary.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libamd_common_la_CPPFLAGS) $(CPPFLAGS) $(common_libamd_common_la_CFLAGS) $(CFLAGS) -c -o common/libamd_common_la-ac_binary.lo `test -f 'common/ac_binary.c' || echo '$(srcdir)/'`common/ac_binary.c

common/libamd_common_la-ac_llvm_build.lo: common/ac_llvm_build.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libamd_common_la_CPPFLAGS) $(CPPFLAGS) $(common_libamd_common_la_CFLAGS) $(CFLAGS) -MT common/libamd_common_la-ac_llvm_build.lo -MD -MP -MF common/$(DEPDIR)/libamd_common_la-ac_llvm_build.Tpo -c -o common/libamd_common_la-ac_llvm_build.lo `test -f 'common/ac_llvm_build.c' || echo '$(srcdir)/'`common/ac_llvm_build.c
#	$(AM_V_at)$(am__mv) common/$(DEPDIR)/libamd_common_la-ac_llvm_build.Tpo common/$(DEPDIR)/libamd_common_la-ac_llvm_build.Plo
#	$(AM_V_CC)source='common/ac_llvm_build.c' object='common/libamd_common_la-ac_llvm_build.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libamd_common_la_CPPFLAGS) $(CPPFLAGS) $(common_libamd_common_la_CFLAGS) $(CFLAGS) -c -o common/libamd_common_la-ac_llvm_build.lo `test -f 'common/ac_llvm_build.c' || echo '$(srcdir)/'`common/ac_llvm_build.c

common/libamd_common_la-ac_llvm_util.lo: common/ac_llvm_util.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libamd_common_la_CPPFLAGS) $(CPPFLAGS) $(common_libamd_common_la_CFLAGS) $(CFLAGS) -MT common/libamd_common_la-ac_llvm_util.lo -MD -MP -MF common/$(DEPDIR)/libamd_common_la-ac_llvm_util.Tpo -c -o common/libamd_common_la-ac_llvm_util.lo `test -f 'common/ac_llvm_util.c' || echo '$(srcdir)/'`common/ac_llvm_util.c
#	$(AM_V_at)$(am__mv) common/$(DEPDIR)/libamd_common_la-ac_llvm_util.Tpo common/$(DEPDIR)/libamd_common_la-ac_llvm_util.Plo
#	$(AM_V_CC)source='common/ac_llvm_util.c' object='common/libamd_common_la-ac_llvm_util.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libamd_common_la_CPPFLAGS) $(CPPFLAGS) $(common_libamd_common_la_CFLAGS) $(CFLAGS) -c -o common/libamd_common_la-ac_llvm_util.lo `test -f 'common/ac_llvm_util.c' || echo '$(srcdir)/'`common/ac_llvm_util.c

common/libamd_common_la-ac_debug.lo: common/ac_debug.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libamd_common_la_CPPFLAGS) $(CPPFLAGS) $(common_libamd_common_la_CFLAGS) $(CFLAGS) -MT common/libamd_common_la-ac_debug.lo -MD -MP -MF common/$(DEPDIR)/libamd_common_la-ac_debug.Tpo -c -o common/libamd_common_la-ac_debug.lo `test -f 'common/ac_debug.c' || echo '$(srcdir)/'`common/ac_debug.c
#	$(AM_V_at)$(am__mv) common/$(DEPDIR)/libamd_common_la-ac_debug.Tpo common/$(DEPDIR)/libamd_common_la-ac_debug.Plo
#	$(AM_V_CC)source='common/ac_debug.c' object='common/libamd_common_la-ac_debug.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libamd_common_la_CPPFLAGS) $(CPPFLAGS) $(common_libamd_common_la_CFLAGS) $(CFLAGS) -c -o common/libamd_common_la-ac_debug.lo `test -f 'common/ac_debug.c' || echo '$(srcdir)/'`common/ac_debug.c

common/libamd_common_la-ac_nir_to_llvm.lo: common/ac_nir_to_llvm.c
#	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libamd_common_la_CPPFLAGS) $(CPPFLAGS) $(common_libamd_common_la_CFLAGS) $(CFLAGS) -MT common/libamd_common_la-ac_nir_to_llvm.lo -MD -MP -MF common/$(DEPDIR)/libamd_common_la-ac_nir_to_llvm.Tpo -c -o common/libamd_common_la-ac_nir_to_llvm.lo `test -f 'common/ac_nir_to_llvm.c' || echo '$(srcdir)/'`common/ac_nir_to_llvm.c
#	$(AM_V_at)$(am__mv) common/$(DEPDIR)/libamd_common_la-ac_nir_to_llvm.Tpo common/$(DEPDIR)/libamd_common_la-ac_nir_to_llvm.Plo
#	$(AM_V_CC)source='common/ac_nir_to_llvm.c' object='common/libamd_common_la-ac_nir_to_llvm.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CCDEPMODE) $(depcomp) 
	$(AM_V_CC)$(LIBTOOL) $(AM_V_lt) --tag=CC $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CC) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libamd_common_la_CPPFLAGS) $(CPPFLAGS) $(common_libamd_common_la_CFLAGS) $(CFLAGS) -c -o common/libamd_common_la-ac_nir_to_llvm.lo `test -f 'common/ac_nir_to_llvm.c' || echo '$(srcdir)/'`common/ac_nir_to_llvm.c

.cpp.o:
#	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.o$$||'`;\
#	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ $<

.cpp.obj:
#	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.obj$$||'`;\
#	$(CXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ `$(CYGPATH_W) '$<'` &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Po
#	$(AM_V_CXX)source='$<' object='$@' libtool=no 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(CXXCOMPILE) -c -o $@ `$(CYGPATH_W) '$<'`

.cpp.lo:
#	$(AM_V_CXX)depbase=`echo $@ | sed 's|[^/]*$$|$(DEPDIR)/&|;s|\.lo$$||'`;\
#	$(LTCXXCOMPILE) -MT $@ -MD -MP -MF $$depbase.Tpo -c -o $@ $< &&\
#	$(am__mv) $$depbase.Tpo $$depbase.Plo
#	$(AM_V_CXX)source='$<' object='$@' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LTCXXCOMPILE) -c -o $@ $<

addrlib/libamdgpu_addrlib_la-addrinterface.lo: addrlib/addrinterface.cpp
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -MT addrlib/libamdgpu_addrlib_la-addrinterface.lo -MD -MP -MF addrlib/$(DEPDIR)/libamdgpu_addrlib_la-addrinterface.Tpo -c -o addrlib/libamdgpu_addrlib_la-addrinterface.lo `test -f 'addrlib/addrinterface.cpp' || echo '$(srcdir)/'`addrlib/addrinterface.cpp
#	$(AM_V_at)$(am__mv) addrlib/$(DEPDIR)/libamdgpu_addrlib_la-addrinterface.Tpo addrlib/$(DEPDIR)/libamdgpu_addrlib_la-addrinterface.Plo
#	$(AM_V_CXX)source='addrlib/addrinterface.cpp' object='addrlib/libamdgpu_addrlib_la-addrinterface.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -c -o addrlib/libamdgpu_addrlib_la-addrinterface.lo `test -f 'addrlib/addrinterface.cpp' || echo '$(srcdir)/'`addrlib/addrinterface.cpp

addrlib/core/libamdgpu_addrlib_la-addrelemlib.lo: addrlib/core/addrelemlib.cpp
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -MT addrlib/core/libamdgpu_addrlib_la-addrelemlib.lo -MD -MP -MF addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrelemlib.Tpo -c -o addrlib/core/libamdgpu_addrlib_la-addrelemlib.lo `test -f 'addrlib/core/addrelemlib.cpp' || echo '$(srcdir)/'`addrlib/core/addrelemlib.cpp
#	$(AM_V_at)$(am__mv) addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrelemlib.Tpo addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrelemlib.Plo
#	$(AM_V_CXX)source='addrlib/core/addrelemlib.cpp' object='addrlib/core/libamdgpu_addrlib_la-addrelemlib.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -c -o addrlib/core/libamdgpu_addrlib_la-addrelemlib.lo `test -f 'addrlib/core/addrelemlib.cpp' || echo '$(srcdir)/'`addrlib/core/addrelemlib.cpp

addrlib/core/libamdgpu_addrlib_la-addrlib.lo: addrlib/core/addrlib.cpp
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -MT addrlib/core/libamdgpu_addrlib_la-addrlib.lo -MD -MP -MF addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib.Tpo -c -o addrlib/core/libamdgpu_addrlib_la-addrlib.lo `test -f 'addrlib/core/addrlib.cpp' || echo '$(srcdir)/'`addrlib/core/addrlib.cpp
#	$(AM_V_at)$(am__mv) addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib.Tpo addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib.Plo
#	$(AM_V_CXX)source='addrlib/core/addrlib.cpp' object='addrlib/core/libamdgpu_addrlib_la-addrlib.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -c -o addrlib/core/libamdgpu_addrlib_la-addrlib.lo `test -f 'addrlib/core/addrlib.cpp' || echo '$(srcdir)/'`addrlib/core/addrlib.cpp

addrlib/core/libamdgpu_addrlib_la-addrlib1.lo: addrlib/core/addrlib1.cpp
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -MT addrlib/core/libamdgpu_addrlib_la-addrlib1.lo -MD -MP -MF addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib1.Tpo -c -o addrlib/core/libamdgpu_addrlib_la-addrlib1.lo `test -f 'addrlib/core/addrlib1.cpp' || echo '$(srcdir)/'`addrlib/core/addrlib1.cpp
#	$(AM_V_at)$(am__mv) addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib1.Tpo addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib1.Plo
#	$(AM_V_CXX)source='addrlib/core/addrlib1.cpp' object='addrlib/core/libamdgpu_addrlib_la-addrlib1.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -c -o addrlib/core/libamdgpu_addrlib_la-addrlib1.lo `test -f 'addrlib/core/addrlib1.cpp' || echo '$(srcdir)/'`addrlib/core/addrlib1.cpp

addrlib/core/libamdgpu_addrlib_la-addrlib2.lo: addrlib/core/addrlib2.cpp
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -MT addrlib/core/libamdgpu_addrlib_la-addrlib2.lo -MD -MP -MF addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib2.Tpo -c -o addrlib/core/libamdgpu_addrlib_la-addrlib2.lo `test -f 'addrlib/core/addrlib2.cpp' || echo '$(srcdir)/'`addrlib/core/addrlib2.cpp
#	$(AM_V_at)$(am__mv) addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib2.Tpo addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib2.Plo
#	$(AM_V_CXX)source='addrlib/core/addrlib2.cpp' object='addrlib/core/libamdgpu_addrlib_la-addrlib2.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -c -o addrlib/core/libamdgpu_addrlib_la-addrlib2.lo `test -f 'addrlib/core/addrlib2.cpp' || echo '$(srcdir)/'`addrlib/core/addrlib2.cpp

addrlib/core/libamdgpu_addrlib_la-addrobject.lo: addrlib/core/addrobject.cpp
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -MT addrlib/core/libamdgpu_addrlib_la-addrobject.lo -MD -MP -MF addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrobject.Tpo -c -o addrlib/core/libamdgpu_addrlib_la-addrobject.lo `test -f 'addrlib/core/addrobject.cpp' || echo '$(srcdir)/'`addrlib/core/addrobject.cpp
#	$(AM_V_at)$(am__mv) addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrobject.Tpo addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrobject.Plo
#	$(AM_V_CXX)source='addrlib/core/addrobject.cpp' object='addrlib/core/libamdgpu_addrlib_la-addrobject.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -c -o addrlib/core/libamdgpu_addrlib_la-addrobject.lo `test -f 'addrlib/core/addrobject.cpp' || echo '$(srcdir)/'`addrlib/core/addrobject.cpp

addrlib/gfx9/libamdgpu_addrlib_la-coord.lo: addrlib/gfx9/coord.cpp
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -MT addrlib/gfx9/libamdgpu_addrlib_la-coord.lo -MD -MP -MF addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-coord.Tpo -c -o addrlib/gfx9/libamdgpu_addrlib_la-coord.lo `test -f 'addrlib/gfx9/coord.cpp' || echo '$(srcdir)/'`addrlib/gfx9/coord.cpp
#	$(AM_V_at)$(am__mv) addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-coord.Tpo addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-coord.Plo
#	$(AM_V_CXX)source='addrlib/gfx9/coord.cpp' object='addrlib/gfx9/libamdgpu_addrlib_la-coord.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -c -o addrlib/gfx9/libamdgpu_addrlib_la-coord.lo `test -f 'addrlib/gfx9/coord.cpp' || echo '$(srcdir)/'`addrlib/gfx9/coord.cpp

addrlib/gfx9/libamdgpu_addrlib_la-gfx9addrlib.lo: addrlib/gfx9/gfx9addrlib.cpp
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -MT addrlib/gfx9/libamdgpu_addrlib_la-gfx9addrlib.lo -MD -MP -MF addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-gfx9addrlib.Tpo -c -o addrlib/gfx9/libamdgpu_addrlib_la-gfx9addrlib.lo `test -f 'addrlib/gfx9/gfx9addrlib.cpp' || echo '$(srcdir)/'`addrlib/gfx9/gfx9addrlib.cpp
#	$(AM_V_at)$(am__mv) addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-gfx9addrlib.Tpo addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-gfx9addrlib.Plo
#	$(AM_V_CXX)source='addrlib/gfx9/gfx9addrlib.cpp' object='addrlib/gfx9/libamdgpu_addrlib_la-gfx9addrlib.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -c -o addrlib/gfx9/libamdgpu_addrlib_la-gfx9addrlib.lo `test -f 'addrlib/gfx9/gfx9addrlib.cpp' || echo '$(srcdir)/'`addrlib/gfx9/gfx9addrlib.cpp

addrlib/gfx9/libamdgpu_addrlib_la-rbmap.lo: addrlib/gfx9/rbmap.cpp
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -MT addrlib/gfx9/libamdgpu_addrlib_la-rbmap.lo -MD -MP -MF addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-rbmap.Tpo -c -o addrlib/gfx9/libamdgpu_addrlib_la-rbmap.lo `test -f 'addrlib/gfx9/rbmap.cpp' || echo '$(srcdir)/'`addrlib/gfx9/rbmap.cpp
#	$(AM_V_at)$(am__mv) addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-rbmap.Tpo addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-rbmap.Plo
#	$(AM_V_CXX)source='addrlib/gfx9/rbmap.cpp' object='addrlib/gfx9/libamdgpu_addrlib_la-rbmap.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -c -o addrlib/gfx9/libamdgpu_addrlib_la-rbmap.lo `test -f 'addrlib/gfx9/rbmap.cpp' || echo '$(srcdir)/'`addrlib/gfx9/rbmap.cpp

addrlib/r800/libamdgpu_addrlib_la-ciaddrlib.lo: addrlib/r800/ciaddrlib.cpp
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -MT addrlib/r800/libamdgpu_addrlib_la-ciaddrlib.lo -MD -MP -MF addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-ciaddrlib.Tpo -c -o addrlib/r800/libamdgpu_addrlib_la-ciaddrlib.lo `test -f 'addrlib/r800/ciaddrlib.cpp' || echo '$(srcdir)/'`addrlib/r800/ciaddrlib.cpp
#	$(AM_V_at)$(am__mv) addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-ciaddrlib.Tpo addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-ciaddrlib.Plo
#	$(AM_V_CXX)source='addrlib/r800/ciaddrlib.cpp' object='addrlib/r800/libamdgpu_addrlib_la-ciaddrlib.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -c -o addrlib/r800/libamdgpu_addrlib_la-ciaddrlib.lo `test -f 'addrlib/r800/ciaddrlib.cpp' || echo '$(srcdir)/'`addrlib/r800/ciaddrlib.cpp

addrlib/r800/libamdgpu_addrlib_la-egbaddrlib.lo: addrlib/r800/egbaddrlib.cpp
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -MT addrlib/r800/libamdgpu_addrlib_la-egbaddrlib.lo -MD -MP -MF addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-egbaddrlib.Tpo -c -o addrlib/r800/libamdgpu_addrlib_la-egbaddrlib.lo `test -f 'addrlib/r800/egbaddrlib.cpp' || echo '$(srcdir)/'`addrlib/r800/egbaddrlib.cpp
#	$(AM_V_at)$(am__mv) addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-egbaddrlib.Tpo addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-egbaddrlib.Plo
#	$(AM_V_CXX)source='addrlib/r800/egbaddrlib.cpp' object='addrlib/r800/libamdgpu_addrlib_la-egbaddrlib.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -c -o addrlib/r800/libamdgpu_addrlib_la-egbaddrlib.lo `test -f 'addrlib/r800/egbaddrlib.cpp' || echo '$(srcdir)/'`addrlib/r800/egbaddrlib.cpp

addrlib/r800/libamdgpu_addrlib_la-siaddrlib.lo: addrlib/r800/siaddrlib.cpp
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -MT addrlib/r800/libamdgpu_addrlib_la-siaddrlib.lo -MD -MP -MF addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-siaddrlib.Tpo -c -o addrlib/r800/libamdgpu_addrlib_la-siaddrlib.lo `test -f 'addrlib/r800/siaddrlib.cpp' || echo '$(srcdir)/'`addrlib/r800/siaddrlib.cpp
#	$(AM_V_at)$(am__mv) addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-siaddrlib.Tpo addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-siaddrlib.Plo
#	$(AM_V_CXX)source='addrlib/r800/siaddrlib.cpp' object='addrlib/r800/libamdgpu_addrlib_la-siaddrlib.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(addrlib_libamdgpu_addrlib_la_CPPFLAGS) $(CPPFLAGS) $(addrlib_libamdgpu_addrlib_la_CXXFLAGS) $(CXXFLAGS) -c -o addrlib/r800/libamdgpu_addrlib_la-siaddrlib.lo `test -f 'addrlib/r800/siaddrlib.cpp' || echo '$(srcdir)/'`addrlib/r800/siaddrlib.cpp

common/libamd_common_la-ac_llvm_helper.lo: common/ac_llvm_helper.cpp
#	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libamd_common_la_CPPFLAGS) $(CPPFLAGS) $(common_libamd_common_la_CXXFLAGS) $(CXXFLAGS) -MT common/libamd_common_la-ac_llvm_helper.lo -MD -MP -MF common/$(DEPDIR)/libamd_common_la-ac_llvm_helper.Tpo -c -o common/libamd_common_la-ac_llvm_helper.lo `test -f 'common/ac_llvm_helper.cpp' || echo '$(srcdir)/'`common/ac_llvm_helper.cpp
#	$(AM_V_at)$(am__mv) common/$(DEPDIR)/libamd_common_la-ac_llvm_helper.Tpo common/$(DEPDIR)/libamd_common_la-ac_llvm_helper.Plo
#	$(AM_V_CXX)source='common/ac_llvm_helper.cpp' object='common/libamd_common_la-ac_llvm_helper.lo' libtool=yes 
#	DEPDIR=$(DEPDIR) $(CXXDEPMODE) $(depcomp) 
	$(AM_V_CXX)$(LIBTOOL) $(AM_V_lt) --tag=CXX $(AM_LIBTOOLFLAGS) $(LIBTOOLFLAGS) --mode=compile $(CXX) $(DEFS) $(DEFAULT_INCLUDES) $(INCLUDES) $(common_libamd_common_la_CPPFLAGS) $(CPPFLAGS) $(common_libamd_common_la_CXXFLAGS) $(CXXFLAGS) -c -o common/libamd_common_la-ac_llvm_helper.lo `test -f 'common/ac_llvm_helper.cpp' || echo '$(srcdir)/'`common/ac_llvm_helper.cpp

mostlyclean-libtool:
	-rm -f *.lo

clean-libtool:
	-rm -rf .libs _libs
	-rm -rf addrlib/.libs addrlib/_libs
	-rm -rf addrlib/core/.libs addrlib/core/_libs
	-rm -rf addrlib/gfx9/.libs addrlib/gfx9/_libs
	-rm -rf addrlib/r800/.libs addrlib/r800/_libs
	-rm -rf common/.libs common/_libs

ID: $(am__tagged_files)
	$(am__define_uniq_tagged_files); mkid -fID $$unique
tags: tags-am
TAGS: tags

tags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	set x; \
	here=`pwd`; \
	$(am__define_uniq_tagged_files); \
	shift; \
	if test -z "$(ETAGS_ARGS)$$*$$unique"; then :; else \
	  test -n "$$unique" || unique=$$empty_fix; \
	  if test $$# -gt 0; then \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      "$$@" $$unique; \
	  else \
	    $(ETAGS) $(ETAGSFLAGS) $(AM_ETAGSFLAGS) $(ETAGS_ARGS) \
	      $$unique; \
	  fi; \
	fi
ctags: ctags-am

CTAGS: ctags
ctags-am: $(TAGS_DEPENDENCIES) $(am__tagged_files)
	$(am__define_uniq_tagged_files); \
	test -z "$(CTAGS_ARGS)$$unique" \
	  || $(CTAGS) $(CTAGSFLAGS) $(AM_CTAGSFLAGS) $(CTAGS_ARGS) \
	     $$unique

GTAGS:
	here=`$(am__cd) $(top_builddir) && pwd` \
	  && $(am__cd) $(top_srcdir) \
	  && gtags -i $(GTAGS_ARGS) "$$here"
cscopelist: cscopelist-am

cscopelist-am: $(am__tagged_files)
	list='$(am__tagged_files)'; \
	case "$(srcdir)" in \
	  [\\/]* | ?:[\\/]*) sdir="$(srcdir)" ;; \
	  *) sdir=$(subdir)/$(srcdir) ;; \
	esac; \
	for i in $$list; do \
	  if test -f "$$i"; then \
	    echo "$(subdir)/$$i"; \
	  else \
	    echo "$$sdir/$$i"; \
	  fi; \
	done >> $(top_builddir)/cscope.files

distclean-tags:
	-rm -f TAGS ID GTAGS GRTAGS GSYMS GPATH tags

distdir: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) distdir-am

distdir-am: $(DISTFILES)
	@srcdirstrip=`echo "$(srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	topsrcdirstrip=`echo "$(top_srcdir)" | sed 's/[].[^$$\\*]/\\\\&/g'`; \
	list='$(DISTFILES)'; \
	  dist_files=`for file in $$list; do echo $$file; done | \
	  sed -e "s|^$$srcdirstrip/||;t" \
	      -e "s|^$$topsrcdirstrip/|$(top_builddir)/|;t"`; \
	case $$dist_files in \
	  */*) $(MKDIR_P) `echo "$$dist_files" | \
			   sed '/\//!d;s|^|$(distdir)/|;s,/[^/]*$$,,' | \
			   sort -u` ;; \
	esac; \
	for file in $$dist_files; do \
	  if test -f $$file || test -d $$file; then d=.; else d=$(srcdir); fi; \
	  if test -d $$d/$$file; then \
	    dir=`echo "/$$file" | sed -e 's,/[^/]*$$,,'`; \
	    if test -d "$(distdir)/$$file"; then \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    if test -d $(srcdir)/$$file && test $$d != $(srcdir); then \
	      cp -fpR $(srcdir)/$$file "$(distdir)$$dir" || exit 1; \
	      find "$(distdir)/$$file" -type d ! -perm -700 -exec chmod u+rwx {} \;; \
	    fi; \
	    cp -fpR $$d/$$file "$(distdir)$$dir" || exit 1; \
	  else \
	    test -f "$(distdir)/$$file" \
	    || cp -p $$d/$$file "$(distdir)/$$file" \
	    || exit 1; \
	  fi; \
	done
check-am: all-am
check: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) check-am
all-am: Makefile $(LTLIBRARIES)
installdirs:
install: $(BUILT_SOURCES)
	$(MAKE) $(AM_MAKEFLAGS) install-am
install-exec: install-exec-am
install-data: install-data-am
uninstall: uninstall-am

install-am: all-am
	@$(MAKE) $(AM_MAKEFLAGS) install-exec-am install-data-am

installcheck: installcheck-am
install-strip:
	if test -z '$(STRIP)'; then \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	      install; \
	else \
	  $(MAKE) $(AM_MAKEFLAGS) INSTALL_PROGRAM="$(INSTALL_STRIP_PROGRAM)" \
	    install_sh_PROGRAM="$(INSTALL_STRIP_PROGRAM)" INSTALL_STRIP_FLAG=-s \
	    "INSTALL_PROGRAM_ENV=STRIPPROG='$(STRIP)'" install; \
	fi
mostlyclean-generic:

clean-generic:

distclean-generic:
	-test -z "$(CONFIG_CLEAN_FILES)" || rm -f $(CONFIG_CLEAN_FILES)
	-test . = "$(srcdir)" || test -z "$(CONFIG_CLEAN_VPATH_FILES)" || rm -f $(CONFIG_CLEAN_VPATH_FILES)
	-rm -f addrlib/$(DEPDIR)/$(am__dirstamp)
	-rm -f addrlib/$(am__dirstamp)
	-rm -f addrlib/core/$(DEPDIR)/$(am__dirstamp)
	-rm -f addrlib/core/$(am__dirstamp)
	-rm -f addrlib/gfx9/$(DEPDIR)/$(am__dirstamp)
	-rm -f addrlib/gfx9/$(am__dirstamp)
	-rm -f addrlib/r800/$(DEPDIR)/$(am__dirstamp)
	-rm -f addrlib/r800/$(am__dirstamp)
	-rm -f common/$(DEPDIR)/$(am__dirstamp)
	-rm -f common/$(am__dirstamp)

maintainer-clean-generic:
	@echo "This command is intended for maintainers to use"
	@echo "it deletes files that may require special tools to rebuild."
	-test -z "$(BUILT_SOURCES)" || rm -f $(BUILT_SOURCES)
clean: clean-am

clean-am: clean-generic clean-libtool clean-noinstLTLIBRARIES \
	mostlyclean-am

distclean: distclean-am
		-rm -f addrlib/$(DEPDIR)/libamdgpu_addrlib_la-addrinterface.Plo
	-rm -f addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrelemlib.Plo
	-rm -f addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib.Plo
	-rm -f addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib1.Plo
	-rm -f addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib2.Plo
	-rm -f addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrobject.Plo
	-rm -f addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-coord.Plo
	-rm -f addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-gfx9addrlib.Plo
	-rm -f addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-rbmap.Plo
	-rm -f addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-ciaddrlib.Plo
	-rm -f addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-egbaddrlib.Plo
	-rm -f addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-siaddrlib.Plo
	-rm -f common/$(DEPDIR)/libamd_common_la-ac_binary.Plo
	-rm -f common/$(DEPDIR)/libamd_common_la-ac_debug.Plo
	-rm -f common/$(DEPDIR)/libamd_common_la-ac_llvm_build.Plo
	-rm -f common/$(DEPDIR)/libamd_common_la-ac_llvm_helper.Plo
	-rm -f common/$(DEPDIR)/libamd_common_la-ac_llvm_util.Plo
	-rm -f common/$(DEPDIR)/libamd_common_la-ac_nir_to_llvm.Plo
	-rm -f Makefile
distclean-am: clean-am distclean-compile distclean-generic \
	distclean-tags

dvi: dvi-am

dvi-am:

html: html-am

html-am:

info: info-am

info-am:

install-data-am:

install-dvi: install-dvi-am

install-dvi-am:

install-exec-am:

install-html: install-html-am

install-html-am:

install-info: install-info-am

install-info-am:

install-man:

install-pdf: install-pdf-am

install-pdf-am:

install-ps: install-ps-am

install-ps-am:

installcheck-am:

maintainer-clean: maintainer-clean-am
		-rm -f addrlib/$(DEPDIR)/libamdgpu_addrlib_la-addrinterface.Plo
	-rm -f addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrelemlib.Plo
	-rm -f addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib.Plo
	-rm -f addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib1.Plo
	-rm -f addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrlib2.Plo
	-rm -f addrlib/core/$(DEPDIR)/libamdgpu_addrlib_la-addrobject.Plo
	-rm -f addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-coord.Plo
	-rm -f addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-gfx9addrlib.Plo
	-rm -f addrlib/gfx9/$(DEPDIR)/libamdgpu_addrlib_la-rbmap.Plo
	-rm -f addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-ciaddrlib.Plo
	-rm -f addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-egbaddrlib.Plo
	-rm -f addrlib/r800/$(DEPDIR)/libamdgpu_addrlib_la-siaddrlib.Plo
	-rm -f common/$(DEPDIR)/libamd_common_la-ac_binary.Plo
	-rm -f common/$(DEPDIR)/libamd_common_la-ac_debug.Plo
	-rm -f common/$(DEPDIR)/libamd_common_la-ac_llvm_build.Plo
	-rm -f common/$(DEPDIR)/libamd_common_la-ac_llvm_helper.Plo
	-rm -f common/$(DEPDIR)/libamd_common_la-ac_llvm_util.Plo
	-rm -f common/$(DEPDIR)/libamd_common_la-ac_nir_to_llvm.Plo
	-rm -f Makefile
maintainer-clean-am: distclean-am maintainer-clean-generic

mostlyclean: mostlyclean-am

mostlyclean-am: mostlyclean-compile mostlyclean-generic \
	mostlyclean-libtool

pdf: pdf-am

pdf-am:

ps: ps-am

ps-am:

uninstall-am:

.MAKE: all check install install-am install-strip

.PHONY: CTAGS GTAGS TAGS all all-am am--depfiles check check-am clean \
	clean-generic clean-libtool clean-noinstLTLIBRARIES \
	cscopelist-am ctags ctags-am distclean distclean-compile \
	distclean-generic distclean-libtool distclean-tags distdir dvi \
	dvi-am html html-am info info-am install install-am \
	install-data install-data-am install-dvi install-dvi-am \
	install-exec install-exec-am install-html install-html-am \
	install-info install-info-am install-man install-pdf \
	install-pdf-am install-ps install-ps-am install-strip \
	installcheck installcheck-am installdirs maintainer-clean \
	maintainer-clean-generic mostlyclean mostlyclean-compile \
	mostlyclean-generic mostlyclean-libtool pdf pdf-am ps ps-am \
	tags tags-am uninstall uninstall-am

.PRECIOUS: Makefile


common/sid_tables.h: $(srcdir)/common/sid_tables.py $(srcdir)/common/sid.h $(srcdir)/common/gfx9d.h
	$(AM_V_at)$(MKDIR_P) $(@D)
	$(AM_V_GEN) $(PYTHON2) $(srcdir)/common/sid_tables.py $(srcdir)/common/sid.h $(srcdir)/common/gfx9d.h > $@

# Tell versions [3.59,3.63) of GNU make to not export all variables.
# Otherwise a system limit (for SysV at least) may be exceeded.
.NOEXPORT:
